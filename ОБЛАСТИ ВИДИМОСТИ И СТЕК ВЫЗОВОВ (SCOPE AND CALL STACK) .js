//////////////////// ОБЛАСТИ ВИДИМОСТИ И СТЕК ВЫЗОВОВ (SCOPE AND CALL STACK) ////////////////////
// 1. Scoping отвечает на вопрос: "Где живут переменные?" или  "Где мы можем получить доступ к определенной переменной, а где нет?"
// 2. В JavaScript есть 3 типа областей видимости(scope): глобальная область видимости, области видимости определяемые функциями, и области видимости определяемые блоками.
// 3. Только переменные let и const имеют блочную область видимости. C ES 6.
// 4. В JavaScript у нас есть лексическая область видимости, поэтому правила того, где мы мы можем получить доступ к переменным, основаны на том, где именно в коде написаны функции и блоки.
// 5. Каждая область видимости всегда имеет доступ ко всем переменным из всех ее внешних областей видимости.
// 6. Когда переменная не входит в текущую область видимости, JS движок ищет в цепочке областей видимости, пока не найдет переменную, которую ищет. Это называется поиском переменных.
// 7. Цепочка областей видимости - это улица с односторонним движением: у области видимости никогда не будет доступа к переменным внутренней области видимости.
// 8. Scope chain в определенном scope равна суммированию всех сред окружения переменных(variable environments) всех родительских scope.
// 9. Scope chain не имеет ничего общего с порядком, в котором были вызваны функции. Это никак не влияет на scope chain.